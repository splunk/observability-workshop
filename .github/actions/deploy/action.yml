name: 'Deploy'
description: 'Build and deploy workshop'

inputs:
  flavour:
    description: type of version to release
    required: true
    default: 'minor'

outputs:
  tag_name:
    description: name of tag created by bumpversion
    value: ${{ steps.bumpversion.outputs.tag_name }}

runs:
  using: "composite"
  steps:
    - name: Bumpversion and commit
      id: bumpversion
      shell: bash
      run: ./.github/ci/do_release -t ${{ inputs.flavour }}

    - name: Build Site
      shell: bash
      run: ./.github/ci/build_site -b ${{ steps.bumpversion.outputs.base_url }} -t ${{ steps.bumpversion.outputs.tag_name }}

    - name: Prepare and publish to GitHub pages
      shell: bash
      env:
        TAG: ${{ steps.bumpversion.outputs.tag_name }}
      run: |
        publish_dir="$(pwd)/site/v${{ steps.bumpversion.outputs.tag_name }}"
        remote=${{ github.repositoryUrl }}
        push_remote=https://${GITHUB_ACTOR}:${{ github.token }}@github.com/${GITHUB_REPOSITORY}.git
        commit_message="Docs: Releasing $TAG"
        prep_dir=$(mktemp -d)

        version_filter=$(yq '.params.versions[] | select (.version != "latest") | [ "! /^" + .version + "/" ]' config.yaml | yq 'join(" && ")')

        git clone --depth=1 --single-branch --branch gh-pages "${remote}" "${prep_dir}"
        cd "${prep_dir}"
        git config user.name "${GITHUB_ACTOR}"
        git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"

        rm -f latest || true
        rsync -a "${publish_dir}" "${prep_dir}"
        ln -s "v${TAG}" latest

        git add --all "v${TAG}"
        git add latest

        # remove old versions
        git ls-files | awk $version_filter | grep -Ev '^latest|.nojekyll|index.html' | xargs rm

        git remote rm origin || true
        git remote add origin "${push_remote}"
        git commit -m "${commit_message}"
        git push origin gh-pages
